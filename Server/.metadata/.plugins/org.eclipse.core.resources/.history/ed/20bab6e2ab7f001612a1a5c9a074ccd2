package GamePieces;

import java.util.*;

import Game.*;
import Game.GameConstants.GameMoves;
import Game.GameConstants.PolyominoeType;

public class IType extends Polyominoes {

	public IType(TetrisBlock[][] tetrisBoard) {
		// TODO Auto-generated constructor stub
		super(PolyominoeType.ITYPE, tetrisBoard);
	}

	@Override
	protected boolean rotate() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	protected boolean down() {
		update();
		if(canAction.get(GameMoves.DOWN))
		{
			Iterator<TetrisBlock> iter = blocks.iterator();
			while(iter.hasNext())
			{
				TetrisBlock block = iter.next();
				block.reDraw(block.getWidth(), block.getHeight() - 1);
			}
			drawPoly();
			return true;
		}
		return false;
	}

	@Override
	protected boolean right() {
		update();
		if(canAction.get(GameMoves.RIGHT))
		{
			Iterator<TetrisBlock> iter = blocks.iterator();
			while(iter.hasNext())
			{
				TetrisBlock block = iter.next();
				block.reDraw(block.getWidth() + 1, block.getHeight());
			}
			drawPoly();
			return true;
		}
		return false;
	}

	@Override
	protected boolean left() {
		// TODO Auto-generated method stub
		update();
		if(canAction.get(GameMoves.LEFT))
		{
			terator<TetrisBlock> iter = blocks.iterator();
			while(iter.hasNext())
			{
				TetrisBlock block = iter.next();
				block.reDraw(block.getWidth() - 1, block.getHeight());
			}
			drawPoly();
			return true;
		}
		return false;
	}

	@Override
	protected boolean createPiece() {
		// TODO Auto-generated method stub
		return false;
	}

}
